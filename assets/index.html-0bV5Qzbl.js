import{_ as s,c as a,a as e,o as p}from"./app-Dz2xZzfz.js";const t={};function i(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="vue笔记" tabindex="-1"><a class="header-anchor" href="#vue笔记"><span>VUE笔记</span></a></h1><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p><a href="https://cn.vuejs.org/" target="_blank" rel="noopener noreferrer">VUE官方文档(https://cn.vuejs.org/)</a></p><h2 id="笔记" tabindex="-1"><a class="header-anchor" href="#笔记"><span>笔记</span></a></h2><h3 id="关于-javascript的-import、export、require" tabindex="-1"><a class="header-anchor" href="#关于-javascript的-import、export、require"><span>关于 javascript的 import、export、require</span></a></h3><p>CommonJS 规范下：</p><p>【导出模块】</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> myModule <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token function-variable function">myFunction</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is my function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">   <span class="token literal-property property">myVariable</span><span class="token operator">:</span> <span class="token string">&#39;This is my variable&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> myModule<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【导入模块】</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 导入模块</span></span>
<span class="line">   <span class="token keyword">const</span> importedModule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./myModule&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">   <span class="token comment">// 使用导入的模块</span></span>
<span class="line">   importedModule<span class="token punctuation">.</span><span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &#39;This is my function&#39;</span></span>
<span class="line">   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>importedModule<span class="token punctuation">.</span>myVariable<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &#39;This is my variable&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>略</p><h3 id="var、let、const的区别" tabindex="-1"><a class="header-anchor" href="#var、let、const的区别"><span>var、let、const的区别</span></a></h3><p>ES6规范下：</p><p>【导出模块】</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 导出模块</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">myFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is my function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> myVariable <span class="token operator">=</span> <span class="token string">&#39;This is my variable&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token punctuation">{</span> myFunction<span class="token punctuation">,</span> myVariable <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【导入模块】</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 导入模块</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> myFunction<span class="token punctuation">,</span> myVariable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./myModule.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用导入的模块</span></span>
<span class="line"><span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &#39;This is my function&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myVariable<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &#39;This is my variable&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意！</strong> 用CommonJS规范导出的模块，可以用ES6规范进行导入；同样，用ES6规范导出的模块，也可以用CommonJS规范进行导入</p></blockquote><h3 id="var、let、const的区别-1" tabindex="-1"><a class="header-anchor" href="#var、let、const的区别-1"><span>var、let、const的区别</span></a></h3><p>var用于声明变量，且具有”变量提升“的特性，因而不推荐使用。</p><blockquote><p>什么是变量提升？</p></blockquote><p>let、const是ES6后新增的关键字。</p><p>let负责声明变量；const负责声明常量。</p><p>const声明的常量只可读，不可被修改。定义时必须初始化。</p>`,24)]))}const l=s(t,[["render",i]]),u=JSON.parse('{"path":"/frontend/VUE/","title":"VUE笔记","lang":"en-US","frontmatter":{"title":"VUE笔记"},"git":{"updatedTime":1708506091000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":4,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"922fc9f1b9845c9b88337898dd27cd7fcd80c70d","time":1708506091000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"099fd76e86cda10f30a12f609ee6b37c300e4565","time":1707040585000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"7b9bf7a0936d90d7d9ed6d5edec40aa36e3a6787","time":1707040585000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"0fb3892db22e769cf4ab23cd656d8e1ef96449b3","time":1697451120000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"frontend/VUE/README.md"}');export{l as comp,u as data};
