import{_ as s,c as a,a as e,o as p}from"./app-Dz2xZzfz.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="rocketmq" tabindex="-1"><a class="header-anchor" href="#rocketmq"><span>RocketMQ</span></a></h1><h1 id="rocketmq学习笔记" tabindex="-1"><a class="header-anchor" href="#rocketmq学习笔记"><span>RocketMQ学习笔记</span></a></h1><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p>Gitee中文开发者文档：<a href="https://gitee.com/apache/rocketmq/tree/master/docs/cn#/apache/rocketmq/blob/master/docs/cn/concept.md" target="_blank" rel="noopener noreferrer">https://gitee.com/apache/rocketmq/tree/master/docs/cn#/apache/rocketmq/blob/master/docs/cn/concept.md</a></p><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2><h3 id="_1-rocketmq有哪些角色" tabindex="-1"><a class="header-anchor" href="#_1-rocketmq有哪些角色"><span>1.RocketMQ有哪些角色？</span></a></h3><ul><li>NameServer <ul><li>特点：轻量级，无状态，地位是一个注册中心，作用类似于Eureka、Zookeeper，负责记录Broker、Producer、Consumer的路由信息</li></ul></li><li>Broker <ul><li>MQ服务器的本体，负责接收、储存、发送消息，多台Broker构成一个MQ集群</li><li>又分为主broker和从broker</li></ul></li><li>Producer <ul><li>生产者，消息的发送方</li></ul></li><li>Consumer <ul><li>消费者，消息的处理方</li></ul></li><li>Topic <ul><li>主题</li></ul></li><li>Message Queue <ul><li>消息队列，Topic的物理实现，一个Topic可以有多个队列</li></ul></li></ul><blockquote><p>这里说的“NameServer是无状态的”是什么意思？ 指NameServer间无需同步数据，无需通信，维护的数据无需做到强一致性。</p></blockquote><h3 id="_2-rocketmq消息发送、存储、消费的流程" tabindex="-1"><a class="header-anchor" href="#_2-rocketmq消息发送、存储、消费的流程"><span>2.RocketMQ消息发送、存储、消费的流程？</span></a></h3><ol><li><p><strong>消息发送</strong></p><ul><li>Producer通过<strong>生产者端负载均衡策略</strong>，选择其中一个队列（Queue）来向其发送消息，策略有：</li><li>轮询</li><li>自定义策略（指定MessageQueueSelector）</li><li>容错策略</li></ul></li><li><p><strong>消息接收</strong></p><ul><li>Broker收到消息后，会将其保存到CommitLog文件中</li></ul></li><li><p><strong>消息消费</strong></p></li></ol><h3 id="_3-broker如何对消息进行持久化" tabindex="-1"><a class="header-anchor" href="#_3-broker如何对消息进行持久化"><span>3.Broker如何对消息进行持久化？</span></a></h3><p>主要依靠3类文件：</p><ul><li>commitLog（数据文件，1G1个文件）</li><li>consumeQueue（基于Topic的索引文件）</li><li>indexfile（基于Key或时间的索引文件）<br> 有两种方式：</li><li>同步刷盘：即保存到硬盘后才给Producer发ACK确认，保证数据不会丢失，但性能较差；</li><li>异步刷盘：保存到PageCache（内存）中便给Producer发ACK确认，性能较快，但有数据丢失的可能</li></ul><h3 id="_4-如何保证数据不丢失" tabindex="-1"><a class="header-anchor" href="#_4-如何保证数据不丢失"><span>4.如何保证数据不丢失？</span></a></h3><ul><li>生产者： <ol><li>增加一个重新发送机制：发送消息成功后，我们将Message以Json形式保存到数据库的一张表中，并设置状态“已发送”； 然后设置一个轮询器（Schedular）,定时查出未发送的Message，并重新发送； 当消费者端需要我们重发消息，只要修改表中该Message的状态为“未发送”，轮询器便会重新发送。</li></ol></li><li>Broker： <ol><li>采用同步刷盘的方式持久化消息；</li><li>集群模式下，主Broker和从Broker间采用同步复制，即等待从Broker复制消息完成后才返回ACK确认</li></ol></li><li>Consumer： <ol><li>offset手动提交</li><li>建立一种补偿机制，即把每条需要消费的消息都保存到库里，若因为某些原因，这条消息消费不成功，也可以自己重新消费一遍。</li></ol></li></ul><h3 id="_5-如何保证消息按顺序让消费者消费" tabindex="-1"><a class="header-anchor" href="#_5-如何保证消息按顺序让消费者消费"><span>5.如何保证消息按顺序让消费者消费？</span></a></h3><ul><li>保证消息由同一线程发送（默认单线程发送）</li><li>保证消息保存到同一个Queue（发送时，可以通过入参MessageQueueSelector选择固定的Queue）</li><li>保证消息发送到同一Topic（往同一Topic发送消息即可）</li><li>保证消息由同一个线程消费</li></ul><h3 id="_6-如何避免消息重复消费" tabindex="-1"><a class="header-anchor" href="#_6-如何避免消息重复消费"><span>6.如何避免消息重复消费？</span></a></h3><ul><li>导致重复消费的原因是：Consumer消费完并发送ACK确认，但因网络原因，Broker没收到，因此重新推送了一次消息，导致再消费了一次。</li><li>如何避免： <ul><li>保证消息消费幂等（如下）。</li></ul></li></ul><h3 id="_7-消费者如何保证幂等-即如果一条消息发出去多次-保证只会被消费一次" tabindex="-1"><a class="header-anchor" href="#_7-消费者如何保证幂等-即如果一条消息发出去多次-保证只会被消费一次"><span>7.消费者如何保证幂等（即如果一条消息发出去多次，保证只会被消费一次）？</span></a></h3><ul><li>消费者是单机：取到数据的ID，存到 ConcurrentHashMap -&gt; putIfAbsent() ，或者guava、cache里</li><li>消费者是集群：取到数据的ID，存到Redis；</li><li>消费前先看这条数据的ID是否已经被保存了，如果是，则证明之前已经被消费过了，不再重新消费。</li></ul><h3 id="_8-rocketmq是如何做负载均衡的" tabindex="-1"><a class="header-anchor" href="#_8-rocketmq是如何做负载均衡的"><span>8.RocketMQ是如何做负载均衡的？</span></a></h3><blockquote><p>参考资料：https://blog.csdn.net/Weixiaohuai/article/details/123898841</p></blockquote><p>Topic在多个Broker中分布式存储。生产者、消费者按照一定的策略，向Broker发送、接收消息。</p><p>分为生产者负载均衡（生产者将消息发送给哪个Broker）、消费者负载均衡（消费者向哪个Broker监听消息）。</p><p>【生产者负载均衡】</p><p>原理：Round-Robin（完全轮询）算法，即获取Topic的所有Queue，每次发送按顺序选择一个Queue发送。 看源码可知，生产者（底层是用DefaultMQProducerImpl）向Topic发送消息时，会调用mqFaultStrategy.selectOneMessageQueue来选择Queue。</p><p>【消费者负载均衡】</p><p>看源码可知，消费者（DefaultMQPushConsumer）在构造函数中，有一个入参是AllocateMessageQueueStrategy，就是用来配置消费者的负载均衡策略。 AllocateMessageQueueStrategy是一个接口，有以下几个实现类：</p><ul><li>AllocateMessageQueueAveragelyByCircle（环形分配策略）</li><li>AllocateMessageQueueByConfig（手动配置分配策略）</li><li>AllocateMessageQueueConsistentHash（一致性哈希分配策略）</li><li>AllocateMessageQueueAveragely （平均分配策略，默认）</li><li>AllocateMessageQueueByMachineRoom（机房分配策略）</li><li>AllocateMachineRoomNearby（靠近机房策略）</li></ul><p>MessageListener默认使用AllocateMessageQueueAveragely。</p><p>下面详细说说每种策略的原理。 假设现在有10个Queue，有4个Consumer。这些Queue如何分配给Consumer呢？ Queue：1~10 Consumer：A、B、C、D</p><p><strong>平均分配策略</strong><br> 根据avg = QueueCount / ConsumerCount，计算出每个Consumer负责多少个Queue，除不尽多出来的则按顺序分到Consumer上。<br> 最后：<br> A：1、2、9<br> B：3、4、10<br> C：5、6<br> D：7、8</p><p><strong>环形分配策略</strong><br> 将Consumer按ID顺序组成一个环形，然后Queue按顺序分配给Consumer。<br> 最后：<br> A：1、5、9<br> B：2、6、10<br> C：3、7<br> D：4、8</p><p><strong>一致性哈希分配策略</strong><br> 将Consumer和Queue都求出一个哈希值，然后按照哈希值组成一个环形，离Queue最近的Consumer负责消费它。</p><h3 id="_9-spring是如何加载和管理rocketmqlistener的" tabindex="-1"><a class="header-anchor" href="#_9-spring是如何加载和管理rocketmqlistener的"><span>9.Spring是如何加载和管理RocketMQListener的？</span></a></h3><ol><li>Spring启动时，会加载Rocketmq的自动配置类ListenerContainerConfiguration</li><li>ListenerContainerConfiguration实现了SmartInitializingSingleton接口，当Spring加载完所有Bean后，会执行里面的afterSingletonsInstantiated()方法 此时会为每个RocketMQMessageListener注册一个Container（DefaultRocketMQListenerContainer）。</li><li>Container实现了InitializingBean接口，当Spring初始化Container Bean的时候，便会调用其afterPropertiesSet()方法，此时为RocketMQListener初始化consumer afterPropertiesSet() -&gt; initRocketMQPushConsumer() -&gt; 配置Consumer（NameServer、超时时间、MessageModel（广播还是集群）、Tag、消费模式（串行还是并发））</li><li>注册完后，会调用container.start()方法，启动Listener去监听对应的Topic</li></ol><h3 id="_10-不用spring的时候-如何使用rocketmq" tabindex="-1"><a class="header-anchor" href="#_10-不用spring的时候-如何使用rocketmq"><span>10.不用Spring的时候，如何使用Rocketmq？</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">        * 生产者</span>
<span class="line">        **/</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DefaultMQProducer</span> <span class="token function">getRocketMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">DefaultMQProducer</span> producer<span class="token punctuation">;</span></span>
<span class="line">          <span class="token comment">//生产者组是test-demo</span></span>
<span class="line">            producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;test-demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token comment">//NameServer</span></span>
<span class="line">            producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.10.50:9876;192.168.10.22:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token comment">//超时时间定义为10s</span></span>
<span class="line">            producer<span class="token punctuation">.</span><span class="token function">setRetryTimesWhenSendFailed</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MQClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">return</span> producer<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token doc-comment comment">/**</span>
<span class="line">      * 发送同步消息 </span>
<span class="line">      **/</span></span>
<span class="line">      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>  <span class="token function">sendSysMes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token function">getRocketMQProducer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              msg<span class="token punctuation">.</span><span class="token function">setTopic</span><span class="token punctuation">(</span><span class="token string">&quot;test-demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              msg<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              msg<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">/*</span>
<span class="line">        * 消费者监听器  </span>
<span class="line">        */</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//消费者组：test-demo</span></span>
<span class="line">        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;test-demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.10.50:9876;192.168.10.22:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//订阅主题topic以及tag  tag为*代表全部</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;test-demo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">        <span class="token comment">//设置消费者模式  广播或者负载均衡模式   默认为负载均衡模式</span></span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">        </span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token annotation punctuation">@Override</span></span>
<span class="line">          <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> message <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">String</span> msgbody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息体内容为    &quot;</span><span class="token operator">+</span>msgbody<span class="token operator">+</span><span class="token string">&quot;           &quot;</span><span class="token operator">+</span><span class="token string">&quot;详细信息: &quot;</span> <span class="token operator">+</span> msgs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>msgbody<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld - RocketMQ&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;======错误=======&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">              <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              <span class="token keyword">if</span> <span class="token punctuation">(</span>msgs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReconsumeTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 该条消息可以存储到DB或者LOG日志中，或其他处理方式</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span><span class="token comment">// 成功</span></span>
<span class="line">              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">RECONSUME_LATER</span><span class="token punctuation">;</span><span class="token comment">// 重试</span></span>
<span class="line">              <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">      </span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h2><h3 id="本机安装-配置-启动" tabindex="-1"><a class="header-anchor" href="#本机安装-配置-启动"><span>本机安装&amp;配置&amp;启动</span></a></h3><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h4><p>略</p><h4 id="修改配置" tabindex="-1"><a class="header-anchor" href="#修改配置"><span>修改配置</span></a></h4><p>配置文件所在路径： /usr/local/rocketmq/conf</p><h4 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h4><p>项目路径：/usr/local/rocketmq/bin</p><p>先启动NameServer：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">#指定NameServer的配置文件</span></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">sh</span> mqnamesrv <span class="token parameter variable">-c</span> namesrv.conf <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>*namesrv.conf主要配置项</p><table><thead><tr><th>配置项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>listenPort</td><td>9876</td><td>监听端口</td></tr><tr><td>serverWorkerThreads</td><td>8</td><td>Netty业务线程池线程个数</td></tr><tr><td>serverSelectorThreads</td><td>3</td><td>NettyIO线程池线程个数</td></tr></tbody></table><p>再启动Broker：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">#指定Broker的配置文件</span></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> <span class="token punctuation">..</span>/conf/broker.conf <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>配置项</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>brokerClusterName</td><td>DefaultCluster</td><td>监听端口</td></tr><tr><td>brokerName</td><td></td><td>Broker名称</td></tr><tr><td>brokerId</td><td></td><td>0表示Master，&gt;0表示Slave</td></tr><tr><td>namesrvAddr</td><td></td><td>NameServer地址，若有多个用逗号隔开</td></tr><tr><td>listenPort</td><td></td><td>监听端口</td></tr><tr><td>storePathRootDir</td><td></td><td>文件存储路径</td></tr><tr><td>storePathCommitLog</td><td></td><td>commitLog存储路径</td></tr><tr><td>flushDiskType</td><td></td><td>刷盘方式：ASYNC_FLUST（异步）SYNC_FLUSH（同步）</td></tr></tbody></table><p>查看是否启动成功：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">#查看NameServer是否启动成功</span></span>
<span class="line"><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> mqnamesrv</span>
<span class="line"></span>
<span class="line"><span class="token comment">#查看NameServer是否启动成功</span></span>
<span class="line"><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> mqbroker</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rocketmq控制台" tabindex="-1"><a class="header-anchor" href="#rocketmq控制台"><span>RocketMQ控制台</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">1.下载源码 https://github.com/apache/rocketmq-externals </span>
<span class="line">2.使用mvn spring-boot:run启动项目</span>
<span class="line">3.访问控制台地址：localhost:8080</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>若启动报错，官方说可能是pom文件中rocketmq版本问题，改为4.4.0即可。</p></blockquote><h3 id="使用docker安装-配置-启动-windows" tabindex="-1"><a class="header-anchor" href="#使用docker安装-配置-启动-windows"><span>使用Docker安装&amp;配置&amp;启动（windows）</span></a></h3><p>docker-compose.yml</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.5&#39;</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">rmqnamesrv</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> foxiswho/rocketmq<span class="token punctuation">:</span>server</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rmqnamesrv</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 9876<span class="token punctuation">:</span><span class="token number">9876</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./logs/namesrv<span class="token punctuation">:</span>/home/rocketmq/logs/rocketmqlogs</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">rmq</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">aliases</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> rmqnamesrv</span>
<span class="line"> </span>
<span class="line">  <span class="token key atrule">rmqbroker</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> foxiswho/rocketmq<span class="token punctuation">:</span>broker</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rmqbroker</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 10909<span class="token punctuation">:</span><span class="token number">10909</span></span>
<span class="line">      <span class="token punctuation">-</span> 10911<span class="token punctuation">:</span><span class="token number">10911</span></span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> ./logs/broker<span class="token punctuation">:</span>/home/rocketmq/logs/rocketmqlogs</span>
<span class="line">      <span class="token punctuation">-</span> ./store/broker<span class="token punctuation">:</span>/home/rocketmq/store</span>
<span class="line">      <span class="token punctuation">-</span> ./conf/broker.conf<span class="token punctuation">:</span>/etc/rocketmq/broker.conf</span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">NAMESRV_ADDR</span><span class="token punctuation">:</span> <span class="token string">&quot;rmqnamesrv:9876&quot;</span></span>
<span class="line">        <span class="token key atrule">JAVA_OPTS</span><span class="token punctuation">:</span> <span class="token string">&quot; -Duser.home=/opt&quot;</span></span>
<span class="line">        <span class="token key atrule">JAVA_OPT_EXT</span><span class="token punctuation">:</span> <span class="token string">&quot;-server -Xms128m -Xmx128m -Xmn128m&quot;</span></span>
<span class="line">    <span class="token key atrule">command</span><span class="token punctuation">:</span> mqbroker <span class="token punctuation">-</span>c /etc/rocketmq/broker.conf</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> rmqnamesrv</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">rmq</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">aliases</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> rmqbroker</span>
<span class="line"> </span>
<span class="line">  <span class="token key atrule">rmqconsole</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> styletang/rocketmq<span class="token punctuation">-</span>console<span class="token punctuation">-</span>ng</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rmqconsole</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 8087<span class="token punctuation">:</span><span class="token number">8080</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">JAVA_OPTS</span><span class="token punctuation">:</span> <span class="token string">&quot;-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot;</span></span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> rmqnamesrv</span>
<span class="line">    <span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">rmq</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">aliases</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> rmqconsole</span>
<span class="line"> </span>
<span class="line"><span class="token key atrule">networks</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">rmq</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">name</span><span class="token punctuation">:</span> rmq</span>
<span class="line">    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在springboot项目中使用rocketmq" tabindex="-1"><a class="header-anchor" href="#在springboot项目中使用rocketmq"><span>在SpringBoot项目中使用RocketMQ</span></a></h3><p>maven增加以下依赖</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocketmq-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>application.properties增加以下配置</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties"><pre><code class="language-properties"><span class="line"><span class="token comment">#元数据管理（Topic信息、路由信息），类似zookeeper</span></span>
<span class="line"><span class="token key attr-name">rocketmq.name-server</span><span class="token punctuation">=</span><span class="token value attr-value">http://localhost:9876</span></span>
<span class="line"><span class="token comment">#生产者组</span></span>
<span class="line"><span class="token key attr-name">rocketmq.producer.group</span><span class="token punctuation">=</span><span class="token value attr-value">ysx-group </span></span>
<span class="line"><span class="token comment">#发送消息超时时间</span></span>
<span class="line"><span class="token key attr-name">rocketmq.producer.send-message-timeout</span><span class="token punctuation">=</span> <span class="token value attr-value">30000</span></span>
<span class="line"><span class="token key attr-name">rocketmq.producer.access-key</span> <span class="token punctuation">=</span> <span class="token value attr-value">xxxxx</span></span>
<span class="line"><span class="token key attr-name">rocketmq.producer.sercet-key</span> <span class="token punctuation">=</span> <span class="token value attr-value">xxxxx</span></span>
<span class="line"><span class="token comment">#重发策略</span></span>
<span class="line"><span class="token key attr-name">rocketmq.producer.retryTimesWhenSendFailed</span> <span class="token punctuation">=</span> <span class="token value attr-value">xxxx</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#自定义name server集群</span></span>
<span class="line"><span class="token key attr-name">myApp.test.rocketmq.name-server</span> <span class="token punctuation">=</span> <span class="token value attr-value">xx.xx.xx.xx:9876,xx.xx.xx.xx:9876</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置Topic</p><p>配置消费者（Push模式）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token annotation punctuation">@RocketMQMessageListener</span><span class="token punctuation">(</span></span>
<span class="line">    topic <span class="token operator">=</span> <span class="token string">&quot;监听的topic name&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    nameServer <span class="token operator">=</span> <span class="token string">&quot;\${myApp.test.rocketmq.name-server}&quot;</span><span class="token punctuation">,</span> <span class="token comment">//使用name server集群配置</span></span>
<span class="line">    selectorExpression <span class="token operator">=</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span><span class="token comment">//还可以根据tag，过滤出topic中自己想消费的message </span></span>
<span class="line">    consumerGroup <span class="token operator">=</span> <span class="token string">&quot;消费者组的name&quot;</span> <span class="token punctuation">,</span></span>
<span class="line">    messageModel <span class="token operator">=</span> <span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">,</span> <span class="token comment">//消费者组的消费模式：集群(默认) or广播</span></span>
<span class="line">    consumeMode <span class="token operator">=</span> <span class="token class-name">ConsumeMode</span><span class="token punctuation">.</span><span class="token constant">CONCURRENTLY</span> <span class="token comment">//是否按顺序消费：并发(默认) or 有序</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">&quot;myListener&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyListener</span> <span class="token keyword">implements</span> <span class="token class-name">RocketMQListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyReqBo</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">//自动将JSON转换为泛型指定的MyReqBo对象</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">MyReqBo</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置生产者</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyProducer</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RocketMQTemplate</span> rocketMQTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 发送普通消息</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">msgBody</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SendResult</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> msgBody<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的mq操作</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RocketMQAPILearning</span><span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token class-name">RocketMQTemplate</span> rocketMQTemplate<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">api</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//发送消息，无返回值</span></span>
<span class="line">        <span class="token comment">//第一个参数：topic name</span></span>
<span class="line">        <span class="token comment">//第二个参数：消息内容</span></span>
<span class="line">        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token string">&quot;普通消息&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        rocketMQTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//同步发送消息，发送过程会阻塞，发送成功会有返回值SendResult</span></span>
<span class="line">        <span class="token class-name">String</span> syncJson <span class="token operator">=</span> <span class="token string">&quot;同步消息&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">SendResult</span> result <span class="token operator">=</span> rocketMQTemplate<span class="token punctuation">.</span><span class="token function">syncSend</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span>syncJson<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">//异步发送消息，无返回值，需要传入回调类</span></span>
<span class="line">        <span class="token class-name">String</span> asyncJson <span class="token operator">=</span> <span class="token string">&quot;异步消息&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        rocketMQTemplate<span class="token punctuation">.</span><span class="token function">asyncSend</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span>asyncJson<span class="token punctuation">,</span></span>
<span class="line">              <span class="token keyword">new</span> <span class="token class-name">SendCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                  <span class="token annotation punctuation">@Override</span></span>
<span class="line">                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">SendResult</span> result<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">						</span>
<span class="line">                  <span class="token punctuation">}</span></span>
<span class="line">                  </span>
<span class="line">                  <span class="token annotation punctuation">@Override</span></span>
<span class="line">                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onException</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">						</span>
<span class="line">                  <span class="token punctuation">}</span></span>
<span class="line">         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">         <span class="token comment">//单向发送消息，不管发送是否成功，无返回值，不回调</span></span>
<span class="line">         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">sendOneWay</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            </span>
<span class="line">         <span class="token comment">//发送有序消息</span></span>
<span class="line">         <span class="token class-name">String</span> hashKey <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">         <span class="token class-name">String</span> orderlyJson <span class="token operator">=</span> <span class="token string">&quot;有序消息&quot;</span><span class="token punctuation">;</span></span>
<span class="line">         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">syncSendOrderly</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span>orderlyJson<span class="token punctuation">,</span>hashKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            </span>
<span class="line">         <span class="token comment">//发送事务消息，用于异步调用场景，实现分布式事务</span></span>
<span class="line">         <span class="token class-name">TransactionMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;transaction-producer-group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">         rocketMQTemplate<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">         </span>
<span class="line">             </span>
<span class="line">         <span class="token comment">//发送延迟消息</span></span>
<span class="line">         <span class="token comment">//延迟等级（从0开始）：1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h</span></span>
<span class="line">         <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic-name&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;hello world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">         message<span class="token punctuation">.</span><span class="token function">setDelayTimeLevel</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//延迟等级为5，5表示1分钟</span></span>
<span class="line">         <span class="token class-name">SendResult</span> result <span class="token operator">=</span> rocketMQTemplate<span class="token punctuation">.</span><span class="token function">syncSend</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rocketmq的消息发送、落盘、消费主流程" tabindex="-1"><a class="header-anchor" href="#rocketmq的消息发送、落盘、消费主流程"><span>RocketMQ的消息发送、落盘、消费主流程</span></a></h4><ol><li><p>生产者发送消息</p><p>确认消息类型：单向、同步、异步</p><p>是否选择队列（队列选择器）</p></li></ol>`,76)]))}const i=s(t,[["render",l]]),u=JSON.parse('{"path":"/mq/rocketMq/","title":"RocketMQ","lang":"en-US","frontmatter":{"title":"RocketMQ","sidebar":"heading"},"git":{"updatedTime":1750240340000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":3,"url":"https://github.com/dongyz8"},{"name":"Fun_zil","username":"","email":"854257920@qq.com","commits":1}],"changelog":[{"hash":"ad8fc1a188d6829c38676e985c8e2097211af10d","time":1750240340000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"f2efd749cd020fc09f8ea9a7391d89c6e5fbff06","time":1733384443000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"443a19563a051d2851a534d47501481962e0a281","time":1704524536000,"email":"854257920@qq.com","author":"Fun_zil","message":"commit"},{"hash":"70b37d4f176375118b0ae99f54befb1f90908112","time":1689762909000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"mq/rocketMq/README.md"}');export{i as comp,u as data};
