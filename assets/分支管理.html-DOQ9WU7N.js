import{_ as e,c as a,a as n,o as l}from"./app-Dz2xZzfz.js";const t={};function o(s,i){return l(),a("div",null,i[0]||(i[0]=[n('<h1 id="分支管理" tabindex="-1"><a class="header-anchor" href="#分支管理"><span>分支管理</span></a></h1><p>记录一下自己经历过、或者了解过的分支管理办法。</p><h2 id="svn办法1" tabindex="-1"><a class="header-anchor" href="#svn办法1"><span>SVN办法1</span></a></h2><ol><li>只有1条分支（MASTER）</li><li>每个版本的开发过程中，所有同事都往主分支提交代码</li><li>版本测试通过后，备份代码，并打上标签</li><li>打包、发布</li><li>开始下一个版本的开发</li></ol><h2 id="git办法1" tabindex="-1"><a class="header-anchor" href="#git办法1"><span>GIT办法1</span></a></h2><ol><li>有多个环境的分支： <ul><li>SIT环境（系统集成测试环境，System Integration Testing）</li><li>UAT环境（用户验收测试环境，User Acceptance Testing）</li><li>VER环境（预生产环境）</li><li>PROD环境（生产环境）</li></ul></li><li>需求开发前，会进行<strong>需求评审</strong>，确定本次需求需要开发的接口数量、每个接口提供的出入参、任务分工</li><li>写好<strong>接口文档</strong>，前端后端根据接口文档进行开发，之后接口有调整也要同步更新接口文档（用yaml搭建的接口文档平台）</li><li>后端开发小组长先从SIT拉出本次的<strong>需求分支</strong>：/FEATURE-demandName</li><li>每个开发同学再<strong>从需求分支拉出子分支</strong>：/FEATURE-demandName-John 、 /FEATURE-demandName-Lisa</li><li>John和Lisa在本地环境自测，开发好就往自己的需求分支提交代码</li><li>John和Lisa的代码合并到/FEATURE-demandName之前，组长可能还会进行<strong>CR（代码评审，Code Review）</strong></li><li>评审完、优化完代码后，小组长将2人代码合并到需求分支/FEATURE-demandName，以及SIT分支</li><li>合并到SIT分支后，通过CI/CD平台自动发版到SIT环境</li></ol>',6)]))}const d=e(t,[["render",o]]),m=JSON.parse('{"path":"/devops/git/%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86.html","title":"分支管理","lang":"en-US","frontmatter":{"title":"分支管理"},"git":{"updatedTime":1730455849000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":1,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"8f077c536b5e7f2af222b7b28b24c4d82f0bb36e","time":1730455849000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"devops/git/分支管理.md"}');export{d as comp,m as data};
