import{_ as e,c as n,a as t,o as s}from"./app-Dz2xZzfz.js";const r={};function o(d,a){return s(),n("div",null,a[0]||(a[0]=[t('<h1 id="享元模式" tabindex="-1"><a class="header-anchor" href="#享元模式"><span>享元模式</span></a></h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p><strong>作用：</strong><br> 当某个类需要被创建大量相似的对象时，会带来大量的内存开销。享元模式便是用来解决该问题。</p><p>通过将对象中相同的、不变的部分分离出来共享，来减少数据冗余，节省内存开销。</p><p><strong>角色：</strong><br> Flyweight：享元角色，即对象之间共享的部分。</p><p>UnsharedConcreteFlyweight：非享元角色，即对象之间不一样的部分。</p><p><strong>示例：五子棋</strong><br><strong>棋子类包含“落子”方法，每颗棋子一样，因此为享元角色；</strong><br><strong>而落的位置每个棋子不同，因此再分出一个非享元角色Point类，表示位置</strong></p><h2 id="代码实现示例" tabindex="-1"><a class="header-anchor" href="#代码实现示例"><span>代码实现示例</span></a></h2><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2>',10)]))}const h=e(r,[["render",o]]),c=JSON.parse('{"path":"/designPattern/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html","title":"享元模式","lang":"en-US","frontmatter":{"title":"享元模式","sidebarDepth":0},"git":{"updatedTime":1697004430000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":2,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"c99267f1ba6ef14faa33acf1026d38fe3d5de16f","time":1697004430000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"c134bd6d46aca8a064a19bb65704fbff919268a4","time":1690885984000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"designPattern/享元模式.md"}');export{h as comp,c as data};
