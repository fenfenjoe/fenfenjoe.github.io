import{_ as e,c as i,a as n,o as h}from"./app-iMoEB5u2.js";const l={};function s(r,a){return h(),i("div",null,a[0]||(a[0]=[n('<h1 id="rabbitmq速查宝典" tabindex="-1"><a class="header-anchor" href="#rabbitmq速查宝典"><span>RabbitMQ速查宝典</span></a></h1><p>[toc]</p><h2 id="简述" tabindex="-1"><a class="header-anchor" href="#简述"><span>简述</span></a></h2><p>RabbitMQ是一个消息队列中间件。</p><p>为什么要使用MQ？ MQ为接口提供以下服务：</p><ul><li>解耦： 接口之间耦合严重的后果，就是当有新的系统需要接入时，需要对代码进行改造，开发联调效率低。 假设系统A需要发送消息给B、C。现在要新增发送给系统D，若不使用MQ，则需要改接口，把处理好的数据也发送给D。</li><li>削峰（流量缓冲池）： 有的接口会面临很高的并发，增加MQ机制，可以做到控制访问该接口的流量，避免因过大并发量造成不好的后果。</li><li>异步： 将接口中调用的非关键操作异步化，可以有效提高接口的响应速度。</li></ul><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><ul><li>消息中间件监控数据</li><li>异步数据传输</li><li>削峰填谷</li><li>任务调度</li><li>海量数据同步</li><li>分布式事务</li><li>日记管理</li><li>大数据分析</li></ul><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2><h3 id="队列-queue-和通道-channel-的区别" tabindex="-1"><a class="header-anchor" href="#队列-queue-和通道-channel-的区别"><span>队列（Queue）和通道（Channel）的区别？</span></a></h3><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><ul><li><p>生产者（Producer）：发送消息的应用。</p></li><li><p>消费者（Consumer）：接收消息的应用。</p></li><li><p>队列（Queue）：存储消息的缓存。</p></li><li><p>消息（Message）：由生产者通过RabbitMQ发送给消费者的信息。</p></li><li><p>连接（Connection）：连接RabbitMQ和应用服务器的TCP连接。</p></li><li><p>通道（Channel）：连接里的一个虚拟通道。当你通过消息队列发送或者接收消息时，这个操作都是通过通道进行的。</p></li><li><p>交换机（Exchange）：交换机负责从生产者那里接收消息，并根据交换类型分发到对应的消息列队里。要实现消息的接收，一个队列必须到绑定一个交换机。</p></li><li><p>绑定（Binding）：绑定是队列和交换机的一个关联连接。</p></li><li><p>路由键（Routing Key）：路由键是供交换机查看并根据键来决定如何分发消息到列队的一个键。路由键可以说是消息的目的地址。</p></li></ul><h2 id="队列模式" tabindex="-1"><a class="header-anchor" href="#队列模式"><span>队列模式</span></a></h2><h3 id="简单队列" tabindex="-1"><a class="header-anchor" href="#简单队列"><span>简单队列</span></a></h3><p>一个队列，一个生产者，一个消费者。</p><h3 id="工作队列" tabindex="-1"><a class="header-anchor" href="#工作队列"><span>工作队列</span></a></h3><p>一个队列，一个生产者，多个消费者。</p><h3 id="发布-订阅" tabindex="-1"><a class="header-anchor" href="#发布-订阅"><span>发布/订阅</span></a></h3><p>一个交换机，一个生产者，多个消费者，多个队列（每个消费者都需要绑定到一个队列）。 流程：</p><ol><li>消费者将自己的队列绑定到交换机；</li><li>生产者生成消息，并将消息发送至交换机；</li><li>交换机将消息发送至绑定到自己身上的队列里；</li><li>消费者从自己的队列里取出消息进行处理；</li></ol><h3 id="路由" tabindex="-1"><a class="header-anchor" href="#路由"><span>路由</span></a></h3><p>与发布/订阅模式类似，一个交换机，一个生产者，多个消费者，多个队列（每个消费者都需要绑定到一个队列）。 但消息不会发送给所有队列，会根据一个叫路由键（key）的规则，将消息指定发送至某些队列里。 流程：</p><ol><li>消费者将自己的队列绑定到交换机，但绑定时还需要指定路由键（key），一个队列可指定多个路由键；</li><li>生产者生成消息，并将消息发送至交换机，发送时指定路由键；</li><li>交换机根据路由键，将消息发送至指定了该路由键的、绑定到自己身上的队列里；</li><li>消费者从自己的队列里取出消息进行处理；</li></ol><h3 id="主题" tabindex="-1"><a class="header-anchor" href="#主题"><span>主题</span></a></h3><p>与发布/订阅模式类似，一个交换机，一个生产者，多个消费者，多个队列（每个消费者都需要绑定到一个队列）。 但消息不会发送给所有队列，会根据通配符表达式（类似正则表达式），将消息指定发送至匹配该表达式的某些队列里。</p><h2 id="rabbitmq的集群模式" tabindex="-1"><a class="header-anchor" href="#rabbitmq的集群模式"><span>RabbitMQ的集群模式</span></a></h2><h3 id="主备模式" tabindex="-1"><a class="header-anchor" href="#主备模式"><span>主备模式</span></a></h3><p>平时只有主节点提供读写，备节点不提供读写处理；只有当主节点宕机时，自动完成切换。</p><h3 id="远程模式" tabindex="-1"><a class="header-anchor" href="#远程模式"><span>远程模式</span></a></h3><h3 id="镜像模式" tabindex="-1"><a class="header-anchor" href="#镜像模式"><span>镜像模式</span></a></h3><h3 id="多活模式" tabindex="-1"><a class="header-anchor" href="#多活模式"><span>多活模式</span></a></h3><h2 id="运维" tabindex="-1"><a class="header-anchor" href="#运维"><span>运维</span></a></h2><h3 id="安装rabbitmq" tabindex="-1"><a class="header-anchor" href="#安装rabbitmq"><span>安装RabbitMQ</span></a></h3><h3 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h3><p>MQ篇(2-1)--最详细的RabbitMQ介绍 <a href="https://blog.csdn.net/github_37130188/article/details/115289346" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/github_37130188/article/details/115289346</a></p>',35)]))}const t=e(l,[["render",s]]),d=JSON.parse('{"path":"/mq/RabbitMQ%E9%80%9F%E6%9F%A5%E5%AE%9D%E5%85%B8.html","title":"RabbitMQ速查宝典","lang":"en-US","frontmatter":{},"git":{"updatedTime":1728468221000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":1,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"a124420178706444697801263f1005096bad2c82","time":1728468221000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"mq/RabbitMQ速查宝典.md"}');export{t as comp,d as data};
