import{_ as s,c as n,a as e,o as t}from"./app-Dz2xZzfz.js";const i={};function l(p,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="桥接模式" tabindex="-1"><a class="header-anchor" href="#桥接模式"><span>桥接模式</span></a></h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p><strong>作用：</strong><br> 当一个类的对象有很多不同维度的属性时，通过“组合”而非“继承”的方式去构建该类。</p><p><strong>示例：</strong><br> 比如“衣服”类，有以下不同的维度：</p><ul><li>尺寸：S、M、L...</li><li>类型：长袖、POLO、短袖...</li><li>质地：丝质、羽绒...</li></ul><p><strong>错误示例</strong><br> S码长袖丝质建一个类、M码长袖丝质建一个类...</p><p><strong>正确做法</strong><br> 为每个维度抽象出一个接口（尺寸：Size、类型：Type、质地：Texture）； 衣服类包含（组合）这些维度作为属性。</p><h2 id="代码实现示例" tabindex="-1"><a class="header-anchor" href="#代码实现示例"><span>代码实现示例</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cloth</span><span class="token punctuation">{</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Size</span> size<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Type</span> type<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">Texture</span> texture<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2>`,11)]))}const r=s(i,[["render",l]]),o=JSON.parse('{"path":"/designPattern/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html","title":"桥接模式","lang":"en-US","frontmatter":{"title":"桥接模式","sidebarDepth":0},"git":{"updatedTime":1697004430000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":2,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"c99267f1ba6ef14faa33acf1026d38fe3d5de16f","time":1697004430000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"c134bd6d46aca8a064a19bb65704fbff919268a4","time":1690885984000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"designPattern/桥接模式.md"}');export{r as comp,o as data};
