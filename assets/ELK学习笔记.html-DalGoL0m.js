import{_ as n,c as a,a as e,o as p}from"./app-iMoEB5u2.js";const t={};function o(l,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="elk学习笔记" tabindex="-1"><a class="header-anchor" href="#elk学习笔记"><span>ELK学习笔记</span></a></h1><h2 id="什么是elk" tabindex="-1"><a class="header-anchor" href="#什么是elk"><span>什么是ELK</span></a></h2><p>ELK是一套日志分析系统，由Elastic Search + Logstash + Kibana三个组件组成。</p><p>三个组件的分工：</p><table><thead><tr><th>组件</th><th>分工</th></tr></thead><tbody><tr><td>Logstash</td><td>负责监控日志文件的变化的进程，负责将增量数据推送至Elastic Search</td></tr><tr><td>Elastic Search</td><td>负责保存日志文件数据，保存时会将数据结构化</td></tr><tr><td>Kibana</td><td>日志数据可视化查询界面</td></tr></tbody></table><h2 id="数据结构化" tabindex="-1"><a class="header-anchor" href="#数据结构化"><span>数据结构化？</span></a></h2><div class="language-log line-numbers-mode" data-highlighter="prismjs" data-ext="log"><pre><code class="language-log"><span class="line"> <span class="token number">17536</span>  </span>
<span class="line"> <span class="token number">17537</span>  <span class="token date number">2023-07-07</span> <span class="token time number">10:41:33</span> <span class="token operator">|</span> <span class="token level warning important">WARN</span>  <span class="token operator">|</span> main <span class="token operator">|</span> AbstractConfig<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">231</span> <span class="token operator">|</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>ConsumerConfig <span class="token operator">|</span> <span class="token operator">(</span>The configuration <span class="token string">&#39;fetch.message.max.bytes&#39;</span> was supplied but isn</span>
<span class="line">&#39;t a known config<span class="token punctuation">.</span></span>
<span class="line"> <span class="token number">17538</span>  </span>
<span class="line"> <span class="token number">17539</span>  <span class="token date number">2023-07-07</span> <span class="token time number">10:41:33</span> <span class="token operator">|</span> <span class="token level info keyword">INFO</span>  <span class="token operator">|</span> main <span class="token operator">|</span> AppInfoParser<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">109</span> <span class="token operator">|</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>AppInfoParser <span class="token operator">|</span> <span class="token operator">(</span>Kafka version <span class="token operator">:</span> <span class="token number">1.0.0</span></span>
<span class="line"> <span class="token number">17540</span>  </span>
<span class="line"> <span class="token number">17541</span>  <span class="token date number">2023-07-07</span> <span class="token time number">10:41:33</span> <span class="token operator">|</span> <span class="token level info keyword">INFO</span>  <span class="token operator">|</span> main <span class="token operator">|</span> AppInfoParser<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">110</span> <span class="token operator">|</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>AppInfoParser <span class="token operator">|</span> <span class="token operator">(</span>Kafka commitId <span class="token operator">:</span> aaa7af6d4a11b29d</span>
<span class="line"> <span class="token number">17542</span>  </span>
<span class="line"> <span class="token number">17543</span>  <span class="token date number">2023-07-07</span> <span class="token time number">10:41:33</span> <span class="token operator">|</span> <span class="token level info keyword">INFO</span>  <span class="token operator">|</span> main <span class="token operator">|</span> ExecutorConfigurationSupport<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">171</span> <span class="token operator">|</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ThreadPoolTaskScheduler <span class="token operator">|</span> <span class="token operator">(</span>Initializing ExecutorService </span>
<span class="line"> <span class="token number">17544</span>  </span>
<span class="line"> <span class="token number">17545</span>  <span class="token date number">2023-07-07</span> <span class="token time number">10:41:33</span> <span class="token operator">|</span> <span class="token level info keyword">INFO</span>  <span class="token operator">|</span> main <span class="token operator">|</span> AbstractConfig<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">223</span> <span class="token operator">|</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>ConsumerConfig <span class="token operator">|</span> <span class="token operator">(</span>ConsumerConfig values<span class="token operator">:</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面是常见的日志数据。Logstash以行为一个单位，发送给ES。同时还会发送一些环境的信息（文件名、路径、文件所在计算机IP等）<br> 报文大概如下：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line"> <span class="token property">&quot;message&quot;</span><span class="token operator">:</span><span class="token string">&quot;2023-07-07 10:41:33 | WARN  | main | AbstractConfig.java:231 | org.apache.kafka.clients.consumer.ConsumerConfig | (The configuration &#39;fetch.message.max.bytes&#39; was supplied but isn&#39;t a known config.&quot;</span></span>
<span class="line"> <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span><span class="token string">&quot;10.18.62.18&quot;</span><span class="token punctuation">,</span></span>
<span class="line"> <span class="token property">&quot;log_path&quot;</span><span class="token operator">:</span><span class="token string">&quot;/apps/svr/srmprice/logs/test.log&quot;</span><span class="token punctuation">,</span></span>
<span class="line"> ...</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES将接收到的JSON串保存下来。</p><p>然后就可以通过KQL（类似于SQL的查询语法），在Kibana上面按字段、或者按全文搜索，查日志的数据了。</p><h2 id="kql" tabindex="-1"><a class="header-anchor" href="#kql"><span>KQL</span></a></h2><p>下面记录一些KQL常用语句。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 查询任意字段中包含&quot;Hello&quot;的记录</span>
<span class="line">Hello </span>
<span class="line"></span>
<span class="line"># 查询任意字段中包含&quot;Hello&quot;或者&quot;World&quot;的记录</span>
<span class="line">Hello World </span>
<span class="line"></span>
<span class="line"># 查询任意字段中包含&quot;Hello World&quot;的记录</span>
<span class="line">&quot;Hello World&quot;</span>
<span class="line"></span>
<span class="line"># 查询name字段中包含&quot;Hello&quot;的记录</span>
<span class="line">name:Hello</span>
<span class="line"></span>
<span class="line"># 查询name字段中包含&quot;Hello&quot;或者&quot;World&quot;的记录</span>
<span class="line">name:Hello World </span>
<span class="line"></span>
<span class="line"># 查询name字段中包含&quot;Hello&quot;，并且age&lt;14的记录</span>
<span class="line">name:Hello and age&lt;14  </span>
<span class="line"></span>
<span class="line"># 查询name字段中包含&quot;Hello&quot;，或者age&lt;14的记录</span>
<span class="line">name:Hello or age&lt;14  </span>
<span class="line"></span>
<span class="line"># 查询age不等于14的记录</span>
<span class="line">not age=14 </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const c=n(t,[["render",o]]),r=JSON.parse('{"path":"/devops/ELK%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","title":"ELK学习笔记","lang":"en-US","frontmatter":{},"git":{"updatedTime":1730455849000,"contributors":[{"name":"dongyz8","username":"dongyz8","email":"dongyz8@gdii-yueyun.com","commits":2,"url":"https://github.com/dongyz8"}],"changelog":[{"hash":"8f077c536b5e7f2af222b7b28b24c4d82f0bb36e","time":1730455849000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"},{"hash":"a124420178706444697801263f1005096bad2c82","time":1728468221000,"email":"dongyz8@gdii-yueyun.com","author":"dongyz8","message":"commit"}]},"filePathRelative":"devops/ELK学习笔记.md"}');export{c as comp,r as data};
